name: Build and Push Docker Image

on:
  # 每天 00:00 (UTC) 定时运行
  schedule:
    - cron: '0 0 * * *'

  # 推送到 master 分支时运行
  push:
    branches:
      - 'master'
    paths:
      - 'Dockerfile'

  # 允许在 Actions 页面手动触发
  workflow_dispatch:

env:
  DOCKERHUB_SLUG: docker.io/yucatovo/smart-homo
  GHCR_SLUG: ghcr.io/yucat-ovo/smart-homo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 需要包写入权限以推送到 GHCR
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 设置 QEMU 以支持在 x86 Runner 上构建 ARM 等多架构镜像
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 设置 Docker Buildx 以启用多平台构建功能
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 自动生成镜像名称和 'latest' 标签
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: latest

      # 构建多架构镜像并推送到 DockerHub 和 GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64
            linux/386
          build-args: |
            REPO=vernesong/mihomo
            TAG=Prerelease-Alpha
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 使用 GitHub Actions 缓存来加速构建
          cache-from: type=gha
          cache-to: type=gha,mode=max
